exponent = -2;
samples_data = vario(sprintf('samples_data/diamor_1_corr_s1e%i.mat', exponent), 'samples_data');
%res = {vario('res_ie.mat', 'res'), vario('res_no_ie.mat', 'res')};
selection = vario('selection_diamor_1_corr_s1e-2.mat', 'selection');
samples_data_sel = struct(...
	'samples', {samples_data.samples(selection)},  ...
	'mdp_data_arr', {samples_data.mdp_data_arr(selection)}  ...
);

res = vario('res_no_ie.mat', 'res');

re_samples_data_sel_test = struct(...
	'samples', {[res{1}.re_samples_test, res{2}.re_samples_test]}, ...
	'mdp_data_arr', {[samples_data_sel.mdp_data_arr(1:2:end), samples_data_sel.mdp_data_arr(2:2:end)]} ...
);

features = {...
	struct('type', 'acc2sum', 'type_c', false, 'type_w', false, 'type_other', false, 'w0', -1) ...
	struct('type', 'iesum', 'a', 25, 'R', 0.4, 'skip_wp', false, 'skip_wc', false, 'skip_other', false) ...
	struct('type', 'dgaussiansum', 'sigma', 0.5, 'skip_wp', false, 'skip_wc', false, 'skip_other', false) ...
	struct('type', 'verr2sum', 'type_c', false, 'type_w', false, 'type_other', false) ...
};


fstats(features, samples_data_sel);
fstats(features, re_samples_data_sel_test);